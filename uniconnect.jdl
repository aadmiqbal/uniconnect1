entity Subjects {
    subjectName String required
}

//Subject table, provides subject name to modules

entity UserModules {
    moduleName String required,
    optional Boolean required,
    studyYear Integer required min(1) max(5)
}

//Core modules table, takes subject name from subjects
//"Optional" field can help control what modules students automatically take

entity AppUsers {
	name String required,
    studyYear Integer required max(5),
    bio String,
    pfp String
}
//Users table, takes subject name from subjects

entity OptionalModuleLink
//linking table for users and optional modules

entity Mentors 
//Mentors table, links user to a mentor identity, takes a module

entity MentorLink
//linking table for mentors and mentees

entity Mentees
//Mentees table, links user to a mentee identity

entity Connections
//Connections table, links users to each other (a connection)

entity UserGroups {
    groupName String required
}
//Groups table, provides group details

entity UserGroupUsers
//Linking table for groups and users

entity UserGroupAd {
    groupBio String
}
//GroupAd table, keeps track of advertised groups, takes a group

relationship OneToOne {
    UserGroupAd{group} to UserGroups
    //setup of GroupAd relationship with Groups
}

relationship ManyToOne {
    Connections {user1} to AppUsers,
    Connections {user2} to AppUsers,
    //setup of Connections table relationship with Users
    
    UserModules{subject} to Subjects,
    //setup of Modules relationship with Users
    
    OptionalModuleLink{optionalModule} to UserModules,
    OptionalModuleLink{optionalModuleUser} to AppUsers,
    //setup of Modules relationship with Users via OptionalModuleLink
    
    Mentors{module} to UserModules,
    Mentors{mentorUser} to AppUsers,
    //setup of Mentors relationship with Modules and Users
    
    MentorLink{mentor} to Mentors,
    MentorLink{mentee} to Mentees,
    //setup of Mentors relationship with Mentees via Mentorlink
    
    Mentees{menteeUser} to AppUsers,
    //setup of Mentees relationship with Users
    
    UserGroupUsers{group} to UserGroups,
    UserGroupUsers{user} to AppUsers
    //setup of Groups relationship with Users via GroupUsers
}

paginate AppUsers, UserGroupUsers, UserGroups, Connections with infinite-scroll
//paginated the tables which are likely to contain the most entries (pagination will speed things up)
//future chat-related tables should probably be paginated